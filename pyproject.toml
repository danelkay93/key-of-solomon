[project]
name = "key_of_solomon"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.13"
dependencies = [
    "datamodel-code-generator[graphql,http]>=0.28.5",
    "tomli>=2.2.1",
    "pydantic>=2.11.2",
    "pydantic-settings>=2.2.1", # Added pydantic-settings
    "sqlalchemy>=2.0.25",      # Added based on db_setup.py
    "python-dotenv>=1.0.0",    # Added based on db_setup.py and notebook
]

[project.optional-dependencies]
dev = [
    "jupyter-collaboration>=3.1.0",
    "jupyter-lsp>=2.2.5",
    "notebook>=7.3.3",
    "uv>=0.1.10",
    "ruff>=0.4.1", # Updated to match removed block version, use >= for flexibility
    "tomli-w>=1.0.0", # Added based on notebook usage
]

[tool.datamodel-codegen]
# --- Core Settings ---
# input_file_type = "JsonSchema" # Usually inferred from input file extension
output_model_type = "PydanticV2BaseModel" # Explicitly Pydantic v2
target_python_version = "3.13" # Target Python 3.13 consistently
use_standard_collections = true
use_union_operator = true
union_mode = "smart" # Recommended union mode

# --- Naming & Structure ---
use_title_as_name = true
collapse_root_models = true
reuse_model = true
snake_case_field = true
# class_name = "PascalCase" # Often redundant if use_title_as_name=true
# field_name = "snake_case" # Redundant if snake_case_field=true
keep_model_order = false

# --- Features & Validation ---
use_annotated = true
field_constraints = true
use_unique_items_as_set = true
use_subclass_enum = true
capitalise_enum_members = true
allow_population_by_field_name = true # Useful for deserialization

# --- Documentation & Output ---
use_field_description = true
use_schema_description = true
strip_default_none = false
use_double_quotes = true
field_include_all_keys = true # Include all schema keys in model

# --- Formatting ---
# Ensure ruff is configured in your project if using formatters
# formatters = ["ruff check --fix", "ruff format"]

# --- Aliases (Optional - Reconsider 'number' alias) ---
# aliases = { "number" = "float" } # Removed - generally safer to let Pydantic infer int/float
